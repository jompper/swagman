/*
 * Pacman - LevelOne
 * 21.12.2013
 * Copyright (c) 2013 Joni Salmi. All rights reserved.
 */
package pacman.level;

/**
 *
 * @author Joni
 */
public class LevelOne implements Level {

    private final int level[][];
    private final int width;
    private final int height;

    public LevelOne() {

        /**
         * Classic Pacman map Tiles: 1 = Wall Left_Right 2 = Wall Up_Down 3 =
         * Wall Right_Down 4 = Wall Right_Up 5 = Wall Left_Down 6 = Wall Left_Up
         * 7 = Gate 8 = PacDot 9 = PowerPellet 10 = Cherry 11 = Pacman 40-49 =
         * Teleports
         */
        level = new int[][]{
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
            {3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5},
            {2, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 2, 2, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 2},
            {2, 8, 3, 1, 1, 5, 8, 3, 1, 1, 1, 5, 8, 2, 2, 8, 3, 1, 1, 1, 5, 8, 3, 1, 1, 5, 8, 2},
            {2, 9, 2, 0, 0, 2, 8, 2, 0, 0, 0, 2, 8, 2, 2, 8, 2, 0, 0, 0, 2, 8, 2, 0, 0, 2, 9, 2},
            {2, 8, 4, 1, 1, 6, 8, 4, 1, 1, 1, 6, 8, 4, 6, 8, 4, 1, 1, 1, 6, 8, 4, 1, 1, 6, 8, 2},
            {2, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 2},
            {2, 8, 3, 1, 1, 5, 8, 3, 5, 8, 3, 1, 1, 1, 1, 1, 1, 5, 8, 3, 5, 8, 3, 1, 1, 5, 8, 2},
            {2, 8, 4, 1, 1, 6, 8, 2, 2, 8, 4, 1, 1, 5, 3, 1, 1, 6, 8, 2, 2, 8, 4, 1, 1, 6, 8, 2},
            {2, 8, 8, 8, 8, 8, 8, 2, 2, 8, 8, 8, 8, 2, 2, 8, 8, 8, 8, 2, 2, 8, 8, 8, 8, 8, 8, 2},
            {4, 1, 1, 1, 1, 5, 8, 2, 4, 1, 1, 5, 0, 2, 2, 0, 3, 1, 1, 6, 2, 8, 3, 1, 1, 1, 1, 6},
            {0, 0, 0, 0, 0, 2, 8, 2, 3, 1, 1, 6, 0, 4, 6, 0, 4, 1, 1, 5, 2, 8, 2, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 2, 8, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 8, 2, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 2, 8, 2, 2, 0, 3, 1, 1, 7, 7, 1, 1, 5, 0, 2, 2, 8, 2, 0, 0, 0, 0, 0},
            {1, 1, 1, 1, 1, 6, 8, 4, 6, 0, 2, 0, 0, 0, 0, 0, 0, 2, 0, 4, 6, 8, 4, 1, 1, 1, 1, 1},
            {40, 0, 0, 0, 0, 0, 8, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 8, 0, 0, 0, 0, 0, 40},
            {1, 1, 1, 1, 1, 5, 8, 3, 5, 0, 2, 0, 0, 0, 0, 0, 0, 2, 0, 3, 5, 8, 3, 1, 1, 1, 1, 1},
            {0, 0, 0, 0, 0, 2, 8, 2, 2, 0, 4, 1, 1, 1, 1, 1, 1, 6, 0, 2, 2, 8, 2, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 2, 8, 2, 2, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 2, 2, 8, 2, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 2, 8, 2, 2, 0, 3, 1, 1, 1, 1, 1, 1, 5, 0, 2, 2, 8, 2, 0, 0, 0, 0, 0},
            {3, 1, 1, 1, 1, 6, 8, 4, 6, 0, 4, 1, 1, 5, 3, 1, 1, 6, 0, 4, 6, 8, 4, 1, 1, 1, 1, 5},
            {2, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 2, 2, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 2},
            {2, 8, 3, 1, 1, 5, 8, 3, 1, 1, 1, 5, 8, 2, 2, 8, 3, 1, 1, 1, 5, 8, 3, 1, 1, 5, 8, 2},
            {2, 8, 4, 1, 5, 2, 8, 4, 1, 1, 1, 6, 8, 4, 6, 8, 4, 1, 1, 1, 6, 8, 2, 3, 1, 6, 8, 2},
            {2, 9, 8, 8, 2, 2, 8, 8, 8, 8, 8, 8, 8, 0, 11, 8, 8, 8, 8, 8, 8, 8, 2, 2, 8, 8, 9, 2},
            {4, 1, 5, 8, 2, 2, 8, 3, 5, 8, 3, 1, 1, 1, 1, 1, 1, 5, 8, 3, 5, 8, 2, 2, 8, 3, 1, 6},
            {3, 1, 6, 8, 4, 6, 8, 2, 2, 8, 4, 1, 1, 5, 3, 1, 1, 6, 8, 2, 2, 8, 4, 6, 8, 4, 1, 5},
            {2, 8, 8, 8, 8, 8, 8, 2, 2, 8, 8, 8, 8, 2, 2, 8, 8, 8, 8, 2, 2, 8, 8, 8, 8, 8, 8, 2},
            {2, 8, 3, 1, 1, 1, 1, 6, 4, 1, 1, 5, 8, 2, 2, 8, 3, 1, 1, 6, 4, 1, 1, 1, 1, 5, 8, 2},
            {2, 8, 4, 1, 1, 1, 1, 1, 1, 1, 1, 6, 8, 4, 6, 8, 4, 1, 1, 1, 1, 1, 1, 1, 1, 6, 8, 2},
            {2, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 2},
            {4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6},
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
        };

        this.width = level[0].length;
        this.height = level.length;
    }

    @Override
    public int[][] getLevel() {
        return level;
    }

    @Override
    public int getWidth() {
        return this.width;
    }

    @Override
    public int getHeight() {
        return this.height;
    }

    /**
     * 
     * @param x
     * @param y
     * @return true if map position contains wall 
     */
    @Override
    public boolean isBlocked(int x, int y) {
        return this.level[y][x] != 0 && this.level[y][x] != 8 && this.level[y][x] != 9;
    }

}
